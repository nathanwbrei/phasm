# Use self-hosted EPSCI MACOS runner to build, push and cache necessary containers
#
# Ref: 
# - https://github.com/spack/spack/blob/develop/.github/workflows/build-containers.yml
# - https://github.com/marketplace/actions/cache
# - https://docs.github.com/en/actions/publishing-packages/publishing-docker-images

name: Build Docker images

on:
  # Run on push to a certain branch that modify files at the following path
  push:
    branches: [ cissie_dev ]
    paths:
      - '.github/workflows/build-docker.yml'
      - 'containers/libtorch_cpu/*'

concurrency:
  group: build_containers-$${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
# A more abstract way is at https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
# Here we do it bare-metally.
  build-and-push-image:
    # matching the label to self-hosted EPSCI MACOS runner
    runs-on: [self-hosted, macOS]
    strategy:
      # Use matrix to control spack env
      matrix:
        spack_env: [basic, g4]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          # Configure it at github repo->settings->secrets and variables->actions.
          # Ref: https://docs.github.com/en/actions/security-guides/encrypted-secrets
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and push Docker images
        run: |
          cd $GITHUB_WORKSPACE/containers/libtorch_cpu
          docker build \
            --build-arg="SPACK_ENV_NAME=${{ matrix.spack_env }}" \
            --no-cache \
            -t xxmei/phasm:${{ matrix.spack_env }}_cpu-torch-1.12 .
          docker push xxmei/phasm:${{ matrix.spack_env }}_cpu-torch-1.12

      - name: Prepare images to cache
        id: prepare-cache
        run: |
          mkdir -p /tmp/.docker-cache
          docker save -o /tmp/.docker-cache/phasm-cpu-${{ matrix.spack_env }}.tar \
            xxmei/phasm:${{ matrix.spack_env }}_cpu-torch-1.12
          echo "timestamp=$(date -Iminutes)" >> $GITHUB_OUTPUT

      - name: Save to Github Action Cache
        uses: actions/cache/save@v3
        with:
          path: |
            /tmp/.docker-cache
          key: docker-${{ matrix.spack_env }}-${{ steps.prepare-cache.outputs.timestamp }}

      - name: Clean Docker build cache and local cache at /tmp/.docker-cache
        run: |
          docker builder prune -a -f
          rm -rf /tmp/.docker-cache
